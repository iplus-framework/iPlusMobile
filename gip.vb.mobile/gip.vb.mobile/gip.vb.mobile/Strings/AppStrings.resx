<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButton_Label" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="BarcodeScanProdOrder_Text" xml:space="preserve">
    <value>Scan or Enter the process function Barcode </value>
  </data>
  <data name="BarcodeScan_Text" xml:space="preserve">
    <value>Scan or Enter Barcode</value>
  </data>
  <data name="BFI_Bookings_Header" xml:space="preserve">
    <value>Bookings</value>
  </data>
  <data name="BFI_InventoryList_Header" xml:space="preserve">
    <value>Inventories</value>
  </data>
  <data name="BFI_InventoryPositionsFilter_Header" xml:space="preserve">
    <value>Filter Inventory Positions</value>
  </data>
  <data name="BFI_InventoryPositions_Header" xml:space="preserve">
    <value>Inventory positions</value>
  </data>
  <data name="BFI_PositionEdit_Header" xml:space="preserve">
    <value>Position edit</value>
  </data>
  <data name="BFI_PositionOverview_Header" xml:space="preserve">
    <value>Inventory Line Overview</value>
  </data>
  <data name="BFI_SearchInventory_Header" xml:space="preserve">
    <value>Search Inventories</value>
  </data>
  <data name="BookingHistory_Header" xml:space="preserve">
    <value>Posting journal</value>
  </data>
  <data name="BookingQuantity_Text" xml:space="preserve">
    <value>Posting quantity</value>
  </data>
  <data name="BtnBlockQuant_Text" xml:space="preserve">
    <value>Block Quant</value>
  </data>
  <data name="BtnClose_Text" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="BtnDoBooking_Text" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="BtnDoZeroStock_Text" xml:space="preserve">
    <value>Quant not available</value>
  </data>
  <data name="BtnLes_Text" xml:space="preserve">
    <value>Less</value>
  </data>
  <data name="BtnLocationOverview_Text" xml:space="preserve">
    <value>Go to Location Overview</value>
  </data>
  <data name="BtnMore_Text" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="BtnOccupyMachine_Text" xml:space="preserve">
    <value>Occupy machine with order</value>
  </data>
  <data name="BtnReleaseMachine_Text" xml:space="preserve">
    <value>Release machine</value>
  </data>
  <data name="BtnReleaseQuant_Text" xml:space="preserve">
    <value>Release Quant</value>
  </data>
  <data name="BtnRelocate_Text" xml:space="preserve">
    <value>Relocate Quant</value>
  </data>
  <data name="BtnSearch_Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="BtnStart_Text" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="BtnUnDoZeroStock_Text" xml:space="preserve">
    <value>Quant available</value>
  </data>
  <data name="BtnUpdate_Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ButtonNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ButtonYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Comment_Text" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="DateFrom_Text" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="DateTo_Text" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="DoPickingPivot_Header" xml:space="preserve">
    <value>Order picking</value>
  </data>
  <data name="FacilityName_Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FacilityNo_Text" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="FacilityPivot_Header" xml:space="preserve">
    <value>Storage Bin</value>
  </data>
  <data name="FacilitySearch_Text" xml:space="preserve">
    <value>Enter Storage Bin No. or Name</value>
  </data>
  <data name="Filter_Text" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="InputMaterials_Header" xml:space="preserve">
    <value>Input materials</value>
  </data>
  <data name="Input_Text" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="Intermediate_Text" xml:space="preserve">
    <value>Intermediate Product</value>
  </data>
  <data name="InventoryPosNotAvailable_Text" xml:space="preserve">
    <value>Not Available</value>
  </data>
  <data name="InventoryPosState_Text" xml:space="preserve">
    <value>Inventory position state</value>
  </data>
  <data name="InventoryPosZeroQuantity_Text" xml:space="preserve">
    <value>Zero Quantity</value>
  </data>
  <data name="InventoryState_Text" xml:space="preserve">
    <value>Inventory state</value>
  </data>
  <data name="LightTheme_Text" xml:space="preserve">
    <value>Light Theme</value>
  </data>
  <data name="LocationPivot_Header" xml:space="preserve">
    <value>Storage Location</value>
  </data>
  <data name="LocationSearch_Text" xml:space="preserve">
    <value>Enter Storage Location No. or Name </value>
  </data>
  <data name="LocationSelect_Text" xml:space="preserve">
    <value>Select Storage Location</value>
  </data>
  <data name="LotPivot_Header" xml:space="preserve">
    <value>Lot</value>
  </data>
  <data name="LotSearch_Text" xml:space="preserve">
    <value>Enter Lot No.</value>
  </data>
  <data name="MaterialPivot_Header" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="MaterialSearch_Text" xml:space="preserve">
    <value>Enter Material No. or Name</value>
  </data>
  <data name="NewStockQuantity_Text" xml:space="preserve">
    <value>New Stock</value>
  </data>
  <data name="Output_Text" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="PartslistName_Label" xml:space="preserve">
    <value>Bill of material name</value>
  </data>
  <data name="Password_Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PickingPosPivot_Header" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="PosState_Text" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="PostingFCPivot_Header" xml:space="preserve">
    <value>Posting</value>
  </data>
  <data name="ProdOrderInOutBookingHistory_Header" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="ProdOrderInOutBooking_Header" xml:space="preserve">
    <value>Posting</value>
  </data>
  <data name="ProdOrderInOutInfo_Header" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="QuantPivot_Header" xml:space="preserve">
    <value>Quants</value>
  </data>
  <data name="ScanBarcodePivot_Header" xml:space="preserve">
    <value>Barcode/RFID</value>
  </data>
  <data name="SelectBatch_Text" xml:space="preserve">
    <value>Select the target batch:</value>
  </data>
  <data name="SelectIntermediate_Text" xml:space="preserve">
    <value>Select the intermediate product:</value>
  </data>
  <data name="SelectPartslist_Text" xml:space="preserve">
    <value>or select the Bill of material:</value>
  </data>
  <data name="SelectTargetFacility_Text" xml:space="preserve">
    <value>or select the target storage:</value>
  </data>
  <data name="StockQuantity_Text" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="SumBlockedAbsolute_Text" xml:space="preserve">
    <value>Sum Blocked Abs.</value>
  </data>
  <data name="SumBlocked_Text" xml:space="preserve">
    <value>Sum Blocked</value>
  </data>
  <data name="SumFree_Text" xml:space="preserve">
    <value>Sum Free</value>
  </data>
  <data name="SumTotal_Text" xml:space="preserve">
    <value>Sum Total</value>
  </data>
  <data name="TimeRangeFilter_Header" xml:space="preserve">
    <value>Timerange</value>
  </data>
  <data name="UseMockDataStore_Text" xml:space="preserve">
    <value>Use Offline-Demodata</value>
  </data>
  <data name="Username_Text" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="IPlusBackendUrl_Text" xml:space="preserve">
    <value>iPlus Url</value>
  </data>
  <data name="WarehousePivot_Header" xml:space="preserve">
    <value>Warehouse</value>
  </data>
  <data name="ZXingOverlay_Text" xml:space="preserve">
    <value>Fully position barcode on line</value>
  </data>
  <data name="ValidateAndComplete_Text" xml:space="preserve">
    <value>Validatate and complete</value>
  </data>
  <data name="GoAndCount_Text" xml:space="preserve">
    <value>1. Go and count</value>
  </data>
  <data name="ViewOpenLines_Text" xml:space="preserve">
    <value>2. View open lines</value>
  </data>
  <data name="FC_NotExist_Text" xml:space="preserve">
    <value>Quant not exist!</value>
  </data>
  <data name="FC_Match_Text" xml:space="preserve">
    <value>Quant match!</value>
  </data>
  <data name="FC_NotMatch_Text" xml:space="preserve">
    <value>Scaned quant (ID: {0}) not match selected (ID: {1})!</value>
  </data>
  <data name="FC_Scan_Go" xml:space="preserve">
    <value>Scan next quant...</value>
  </data>
  <data name="FC_Scan_Check" xml:space="preserve">
    <value>Scan selected quant match...</value>
  </data>
</root>