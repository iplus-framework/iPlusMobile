<?xml version="1.0" encoding="utf-8" ?>
<v:BSOTabbedPageBase xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:v="clr-namespace:gip.vb.mobile.Views"
             xmlns:i18n="clr-namespace:gip.vb.mobile.Helpers"
             xmlns:ctl="clr-namespace:gip.vb.mobile.Controls"
             xmlns:hp="clr-namespace:gip.vb.mobile.Helpers"
               BackgroundColor="{DynamicResource PageBackgroundColor}"
               BarBackgroundColor="{DynamicResource NavigationBarColor}"
               BarTextColor="{DynamicResource NavigationBarTextColor}"
               Title="{Binding Title}"
             x:Class="gip.vb.mobile.Views.BSOFacilityChargeOverview">
    <v:BSOTabbedPageBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary Source="../../Themes/SharedDataTemplates.xaml" />
            <hp:StringFormatConverter x:Key="StringFormat"/>
            <hp:DecimalConverter x:Key="DecimalConverter" />
            <hp:DoubleConverter x:Key="DoubleConverter" />
            <hp:BooleanNegationConverter x:Key="BooleanNegationConverter" />
        </ResourceDictionary>
    </v:BSOTabbedPageBase.Resources>    
    <v:BSOTabbedPageBase.ToolbarItems>
        <ToolbarItem x:Name="TBItemHistory" Order="Primary" Priority="0" Text="History" Clicked="TBItemHistory_Clicked" IconImageSource="NavIconHistory.png">
        </ToolbarItem>
        <ToolbarItem x:Name="TabPrint" Order="Primary" Priority="1" Text="Print" Clicked="Print_Clicked" IconImageSource="Print.png">
        </ToolbarItem>
    </v:BSOTabbedPageBase.ToolbarItems>
    <v:BSOPageBase x:Name="LotPivotItem" Title="{i18n:Translate Text=QuantPivot_Header}">
        <ScrollView Orientation="Vertical">
            <StackLayout>
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.Material, Text=MaterialNo}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.Material.MaterialNo}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.Material, Text=MaterialName1}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.Material.MaterialName1}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.Facility, Text=FacilityName}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.Facility.FacilityName}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityLot, Text=LotNo}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.FacilityLot.LotNo}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityCharge, Text=StockQuantity}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.StockQuantity}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityCharge, Text=FillingDate}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.FillingDate}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityLot, Text=ProductionDate}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.FacilityLot.ProductionDate}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityLot, Text=ExpirationDate}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.FacilityLot.ExpirationDate}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityLot, Text=StorageLife}" Style="{StaticResource LabelForDesc}" />
                <Label Text="{Binding Item.FacilityLot.StorageLife}" Style="{StaticResource LabelForData}" />
                <Label Text="{i18n:Translate FullQName=gip.mes.webservices.FacilityCharge, Text=NotAvailable}" Style="{StaticResource LabelForDesc}" />
                <CheckBox IsChecked="{Binding Item.NotAvailable}" IsEnabled="False" />
            </StackLayout>
        </ScrollView>
    </v:BSOPageBase>
    <v:BSOPageBase x:Name="PostingFCPivotItem" Title="{i18n:Translate Text=PostingFCPivot_Header}">
        <!--<Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="100"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
            </Grid.RowDefinitions>-->
        <ScrollView Orientation="Vertical">
            <StackLayout>
                <ctl:MsgLabel Msg="{Binding Message}" LineBreakMode="WordWrap" HorizontalOptions="CenterAndExpand" />
                <Label Text="{i18n:Translate Text=BookingQuantity_Text}" Style="{StaticResource LabelForData}"/>
                <ctl:NumericEntry x:Name="BookingQuantity" TextNumeric="{Binding BookingQuantity, Mode=TwoWay, Converter={StaticResource DoubleConverter}, ConverterParameter=1}" HorizontalTextAlignment="End">
                    <Entry.Behaviors>
                        <hp:NumericTextBoxBehavior AllowDecimal="True" IsDecimal="False" Precision="1"/>
                    </Entry.Behaviors>
                </ctl:NumericEntry>
                <Button x:Name="ButtonDoBooking" Text="{i18n:Translate Text=BtnDoBooking_Text}" Clicked="ButtonDoBooking_Clicked"/>
                <Button x:Name="ButtonDoZeroStock" Text="{i18n:Translate Text=BtnDoZeroStock_Text}" IsEnabled="{Binding Item.NotAvailable, Converter={StaticResource BooleanNegationConverter}}" Clicked="ButtonDoBooking_Clicked"/>
                <Button x:Name="ButtonUnDoZeroStock" Text="{i18n:Translate Text=BtnUnDoZeroStock_Text}" IsEnabled="{Binding Item.NotAvailable}" Clicked="ButtonDoBooking_Clicked"/>
                <Button x:Name="ButtonBlockQuant" Text="{i18n:Translate Text=BtnBlockQuant_Text}" Clicked="ButtonDoBooking_Clicked">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="Free">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="AbsFree">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="Locked">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="AbsLocked">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button x:Name="ButtonReleaseQuant" Text="{i18n:Translate Text=BtnReleaseQuant_Text}" Clicked="ButtonDoBooking_Clicked">
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="Free">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="AbsFree">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="Locked">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding Item.MDReleaseState.ReleaseState}" Value="AbsLocked">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <SearchBar x:Name="BarcodeSearchBar" Placeholder="{i18n:Translate Text=BarcodeScan_Text}" Text="{Binding CurrentBarcode}" SearchButtonPressed="BarcodeSearchBar_SearchButtonPressed"/>
                <Label Text="{i18n:Translate Text=LocationSelect_Text}" Style="{StaticResource LabelForDesc}" />
                <Picker x:Name="LocationCombo" 
                    SelectedItem="{Binding SelectedLocation, Mode=TwoWay}" 
                    ItemsSource="{Binding Locations}" 
                    HorizontalOptions="CenterAndExpand"
                    MinimumWidthRequest="50"
                    WidthRequest="200"
                    ItemDisplayBinding="{Binding FacilityName}"/>
                <SearchBar x:Name="FacilitySearchBar" Placeholder="{i18n:Translate Text=FacilitySearch_Text}" Text="{Binding FacilitySearch}"
                        TextChanged="FacilitySearchBar_TextChanged"
                        SearchButtonPressed="FacilitySearchBar_SearchButtonPressed" />
                <ListView x:Name="FacilityListView" ItemsSource="{Binding FilteredFacilites}" 
                            SelectedItem="{Binding SelectedFacility}"
                            IsGroupingEnabled="false" RowHeight="50"
                        ItemTemplate="{StaticResource FacilityItemTemplate}"
                        HasUnevenRows="true"
                        RefreshCommand="{Binding LoadFilteredFacilitiesCommand}"
                        IsPullToRefreshEnabled="true"
                        IsRefreshing="{Binding IsBusy, Mode=OneWay}"
                        CachingStrategy="RecycleElement"
                        ItemSelected="FacilityListView_ItemSelected"
                        ItemTapped="FacilityListView_ItemTapped"
                          HeightRequest="100"/>
                <Button x:Name="ButtonRelocate" Text="{i18n:Translate Text=BtnRelocate_Text}" Clicked="ButtonDoBooking_Clicked"/>
            </StackLayout>
        </ScrollView>
        <!--</Grid>-->
    </v:BSOPageBase>
</v:BSOTabbedPageBase>